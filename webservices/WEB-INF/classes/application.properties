### This file was generated!

###
### From: openl-default.properties
###
#ruleservice.baseAddress = /

#ruleservice.databinding.rootClassNames =

#ruleservice.aegisbinding.readXsiTypes = true
#ruleservice.aegisbinding.writeXsiTypes = true
#ruleservice.aegisbinding.ignoreNamespaces = false

#ruleservice.http.connectionTimeout = 300000
#ruleservice.http.recieveTimeout = 300000

#ruleservice.jaxrs.responseStatusAlwaysOK = false
#ruleservice.jaxrs.swagger.prettyprint = false

#ruleservice.logging.enabled = false
#ruleservice.logging.store.enabled = false

#ruleservice.deployer.enable = false

###
### From: org.openl.rules.ruleservice-5.21.12.jar!/openl-default.properties
###
#ruleservice.openl.home = ${openl.home}
#ruleservice.tmp.dir = ${ruleservice.openl.home}/rules-deploy

ruleservice.isProvideRuntimeContext = false
ruleservice.isSupportVariations = true

ruleservice.datasource.type = jcr
#ruleservice.datasource.filesystem.supportDeployments = false
#ruleservice.datasource.filesystem.supportVersion = false
#ruleservice.datasource.groups =
#ruleservice.datasource.deploy.classpath.jars = true
#ruleservice.datasource.deploy.clean.datasource = true

#ruleservice.datasource.dir = ${ruleservice.openl.home}/openl-ruleservice/datasource
#ruleservice.datasource.propertiesFolder =

#ruleservice.instantiation.strategy.lazy = true
#ruleservice.instantiation.strategy.maxthreadsforcompile = 3

#production-repository.factory = org.openl.rules.repository.LocalRepositoryFactory
# Other repository factories:
production-repository.factory = org.openl.rules.repository.db.JdbcDBRepositoryFactory
#production-repository.factory = org.openl.rules.repository.db.DatasourceDBRepositoryFactory
#production-repository.factory = org.openl.rules.repository.aws.S3Repository

production-repository.uri = jdbc:mysql://mysql:3306/oltdeployment?autoReconnect=true&useSSL=false
production-repository.login = ztadmin
production-repository.password = secret

### AWS S3 Specific
# A logical unit of storage in AWS object storage service. Globally unique.
#production-repository.bucket-name =
# AWS Region that is geographically close to you to optimize latency, minimize costs etc.
#production-repository.region-name =
# Alphanumeric text string that is used to identify the user who owns the account.
#production-repository.access-key =
# Plays the role of a password for a given access-key.
#production-repository.secret-key =
# Repository changes check interval in seconds. Must be greater than 0.
#production-repository.listener-timer-period = 10
###

# Secret key for password code/decode
#repository.encode.decode.key =
# Set "version-in-deployment-name = true" for compatibility with the previous implementation of a deployment repository.
# !!! Be aware that 'true' reduces performance on repositories with long history. !!!
#version-in-deployment-name = false

#System Properties
#custom.spreadsheet.type = true
#dispatching.mode = java
#dispatching.validation = false

#Filter deployments by name from datasource. Deployment names should be specified using comma separator
#Patterns can be specified using wildcard letter, for example: rule-*
#ruleservice.datasource.deployments=

###
### From: org.openl.spring-5.21.12.jar!/openl-default.properties
###
# OpenL working directory.
#openl.home = ${user.home}/.openl

##########################################
# Don't override these properties itself
# in application level properties files!
# E.g. in application.properties
# It will not work!
#openl.config.location = ${spring.config.location: classpath:, classpath:conf/, classpath:config/, file:, file:conf/, file:config/, file:${user.home}/, file:${user.home}/openl.properties, file:${openl.home}/}
#openl.config.name = ${spring.config.name: application.properties, application-{profile}.properties, {appName}.properties, {appName}-{profile}.properties}
##########################################

###
### From: org.openl.rules.ruleservice.rmi-5.21.12.jar!/openl-default.properties
###
#ruleservice.rmiPort = 1099
#ruleservice.rmiHost = 127.0.0.1

